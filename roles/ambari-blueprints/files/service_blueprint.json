{
    "Blueprints": {
        "stack_name": "NBBDS",
        "stack_version": "0.1"
    },
    "configurations": [
        {
            "cluster-env": {
                "properties": {
                    "alerts_repeat_tolerance": "1",
                    "fetch_nonlocal_groups": "true",
                    "ignore_bad_mounts": "false",
                    "ignore_groupsusers_create": "false",
                    "kerberos_domain": "NOKIA.COM",
                    "manage_dirs_on_root": "true",
                    "managed_hdfs_resource_property_names": "",
                    "one_dir_per_partition": "false",
                    "override_uid": "true",
                    "recovery_enabled": "true",
                    "recovery_lifetime_max_count": "1024",
                    "recovery_max_count": "6",
                    "recovery_retry_interval": "5",
                    "recovery_type": "AUTO_START",
                    "recovery_window_in_minutes": "60",
                    "repo_suse_rhel_template": "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
                    "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
                    "security_enabled": "false",
                    "smokeuser": "ambari-qa",
                    "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
                    "stack_features": "{\n  \"stack_features\": [\n    {\n      \"name\": \"snappy\",\n      \"description\": \"Snappy compressor/decompressor support\",\n      \"min_version\": \"2.0.0.0\",\n      \"max_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"lzo\",\n      \"description\": \"LZO libraries support\",\n      \"min_version\": \"2.2.1.0\"\n    },\n    {\n      \"name\": \"express_upgrade\",\n      \"description\": \"Express upgrade support\",\n      \"min_version\": \"2.1.0.0\"\n    },\n    {\n      \"name\": \"rolling_upgrade\",\n      \"description\": \"Rolling upgrade support\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"config_versioning\",\n      \"description\": \"Configurable versions support\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"datanode_non_root\",\n      \"description\": \"DataNode running as non-root support (AMBARI-7615)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"remove_ranger_hdfs_plugin_env\",\n      \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"ranger\",\n      \"description\": \"Ranger Service support\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"ranger_tagsync_component\",\n      \"description\": \"Ranger Tagsync component support (AMBARI-14383)\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"phoenix\",\n      \"description\": \"Phoenix Service support\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"nfs\",\n      \"description\": \"NFS support\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"tez_for_spark\",\n      \"description\": \"Tez dependency for Spark\",\n      \"min_version\": \"2.2.0.0\",\n      \"max_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"timeline_state_store\",\n      \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"copy_tarball_to_hdfs\",\n      \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"spark_16plus\",\n      \"description\": \"Spark 1.6+\",\n      \"min_version\": \"2.4.0.0\"\n    },\n    {\n      \"name\": \"spark_thriftserver\",\n      \"description\": \"Spark Thrift Server\",\n      \"min_version\": \"2.3.2.0\"\n    },\n    {\n      \"name\": \"storm_kerberos\",\n      \"description\": \"Storm Kerberos support (AMBARI-7570)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"storm_ams\",\n      \"description\": \"Storm AMS integration (AMBARI-10710)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"create_kafka_broker_id\",\n      \"description\": \"Ambari should create Kafka Broker Id (AMBARI-12678)\",\n      \"min_version\": \"2.2.0.0\",\n      \"max_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"kafka_listeners\",\n      \"description\": \"Kafka listeners (AMBARI-10984)\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"kafka_kerberos\",\n      \"description\": \"Kafka Kerberos support (AMBARI-10984)\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"pig_on_tez\",\n      \"description\": \"Pig on Tez support (AMBARI-7863)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"ranger_usersync_non_root\",\n      \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"ranger_audit_db_support\",\n      \"description\": \"Ranger Audit to DB support\",\n      \"min_version\": \"2.2.0.0\",\n      \"max_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"accumulo_kerberos_user_auth\",\n      \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"knox_versioned_data_dir\",\n      \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\",\n      \"min_version\": \"2.3.2.0\"\n    },\n    {\n      \"name\": \"knox_sso_topology\",\n      \"description\": \"Knox SSO Topology support (AMBARI-13975)\",\n      \"min_version\": \"2.3.8.0\"\n    },\n    {\n      \"name\": \"atlas_rolling_upgrade\",\n      \"description\": \"Rolling upgrade support for Atlas\",\n      \"min_version\": \"2.3.0.0\"\n    },\n    {\n      \"name\": \"oozie_admin_user\",\n      \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"oozie_create_hive_tez_configs\",\n      \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"oozie_setup_shared_lib\",\n      \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"oozie_host_kerberos\",\n      \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\",\n      \"min_version\": \"2.0.0.0\",\n      \"max_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"falcon_extensions\",\n      \"description\": \"Falcon Extension\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"hive_metastore_upgrade_schema\",\n      \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\",\n      \"min_version\": \"2.3.0.0\"\n     },\n    {\n      \"name\": \"hive_server_interactive\",\n      \"description\": \"Hive server interactive support (AMBARI-15573)\",\n      \"min_version\": \"2.5.0.0\"\n     },\n    {\n      \"name\": \"hive_webhcat_specific_configs\",\n      \"description\": \"Hive webhcat specific configurations support (AMBARI-12364)\",\n      \"min_version\": \"2.3.0.0\"\n     },\n    {\n      \"name\": \"hive_purge_table\",\n      \"description\": \"Hive purge table support (AMBARI-12260)\",\n      \"min_version\": \"2.3.0.0\"\n     },\n    {\n      \"name\": \"hive_server2_kerberized_env\",\n      \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\",\n      \"min_version\": \"2.2.3.0\",\n      \"max_version\": \"2.2.5.0\"\n     },\n    {\n      \"name\": \"hive_env_heapsize\",\n      \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\",\n      \"min_version\": \"2.2.0.0\"\n    },\n    {\n      \"name\": \"ranger_kms_hsm_support\",\n      \"description\": \"Ranger KMS HSM support (AMBARI-15752)\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_log4j_support\",\n      \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_kerberos_support\",\n      \"description\": \"Ranger Kerberos support\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"hive_metastore_site_support\",\n      \"description\": \"Hive Metastore site support\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_usersync_password_jceks\",\n      \"description\": \"Saving Ranger Usersync credentials in jceks\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_install_infra_client\",\n      \"description\": \"Ambari Infra Service support\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"falcon_atlas_support_2_3\",\n      \"description\": \"Falcon Atlas integration support for 2.3 stack\",\n      \"min_version\": \"2.3.99.0\",\n      \"max_version\": \"2.4.0.0\"\n    },\n    {\n      \"name\": \"falcon_atlas_support\",\n      \"description\": \"Falcon Atlas integration\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"hbase_home_directory\",\n      \"description\": \"Hbase home directory in HDFS needed for HBASE backup\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"spark_livy\",\n      \"description\": \"Livy as slave component of spark\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"atlas_ranger_plugin_support\",\n      \"description\": \"Atlas Ranger plugin support\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"atlas_conf_dir_in_path\",\n      \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\",\n      \"min_version\": \"2.3.0.0\",\n      \"max_version\": \"2.4.99.99\"\n    },\n    {\n      \"name\": \"atlas_upgrade_support\",\n      \"description\": \"Atlas supports express and rolling upgrades\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"atlas_hook_support\",\n      \"description\": \"Atlas support for hooks in Hive, Storm, Falcon, and Sqoop\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_pid_support\",\n      \"description\": \"Ranger Service support pid generation AMBARI-16756\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_kms_pid_support\",\n      \"description\": \"Ranger KMS Service support pid generation\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"ranger_admin_password_change\",\n      \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"storm_metrics_apache_classes\",\n      \"description\": \"Metrics sink for Storm that uses Apache class names\",\n      \"min_version\": \"2.5.0.0\"\n    },\n    {\n      \"name\": \"spark_java_opts_support\",\n      \"description\": \"Allow Spark to generate java-opts file\",\n      \"min_version\": \"2.2.0.0\",\n      \"max_version\": \"2.4.0.0\"\n    },\n    {\n      \"name\": \"atlas_hbase_setup\",\n      \"description\": \"Use script to create Atlas tables in Hbase and set permissions for Atlas user.\",\n      \"min_version\": \"2.5.0.0\"\n    }\n  ]\n}",
                    "stack_root": "/opt",
                    "stack_tools": "{\n  \"stack_selector\": [\"hdp-select\", \"/usr/bin/hdp-select\", \"hdp-select\"],\n  \"conf_selector\": [\"conf-select\", \"/usr/bin/conf-select\", \"conf-select\"]\n}",
                    "user_group": "hadoop"
                },
                "properties_attributes": {}
            }
        },
        {
            "zoo.cfg": {
                "properties": {
                    "autopurge.purgeInterval": "24",
                    "autopurge.snapRetainCount": "30",
                    "clientPort": "2181",
                    "dataDir": "/hadoop/zookeeper",
                    "initLimit": "10",
                    "syncLimit": "5",
                    "tickTime": "2000"
                },
                "properties_attributes": {}
            }
        },
        {
            "zookeeper-log4j": {
                "properties": {
                    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
                },
                "properties_attributes": {}
            }
        },
        {
            "zookeeper-env": {
                "properties": {
                    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}",
                    "zk_log_dir": "/var/log/zookeeper",
                    "zk_pid_dir": "/var/run/zookeeper",
                    "zk_user": "zookeeper"
                },
                "properties_attributes": {}
            }
        },
        {
            "ssl-server": {
                "properties": {
                    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
                    "ssl.server.keystore.type": "jks",
                    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
                    "ssl.server.truststore.reload.interval": "10000",
                    "ssl.server.truststore.type": "jks"
                },
                "properties_attributes": {}
            }
        },
        {
            "hdfs-log4j": {
                "properties": {
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN"
                },
                "properties_attributes": {}
            }
        },
        {
            "hadoop-policy": {
                "properties": {
                    "security.admin.operations.protocol.acl": "hadoop",
                    "security.client.datanode.protocol.acl": "*",
                    "security.client.protocol.acl": "*",
                    "security.datanode.protocol.acl": "*",
                    "security.inter.datanode.protocol.acl": "*",
                    "security.inter.tracker.protocol.acl": "*",
                    "security.job.client.protocol.acl": "*",
                    "security.job.task.protocol.acl": "*",
                    "security.namenode.protocol.acl": "*",
                    "security.refresh.policy.protocol.acl": "hadoop",
                    "security.refresh.usertogroups.mappings.protocol.acl": "hadoop"
                },
                "properties_attributes": {}
            }
        },
        {
            "core-site": {
                "properties": {
                    "fs.defaultFS": "hdfs://namenodeHA",
                    "fs.trash.interval": "360",
                    "ha.failover-controller.active-standby-elector.zk.op.retries": "120",
                    "ha.zookeeper.quorum": "%HOSTGROUP::host_group_0%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_2%:2181",
                    "ha.zookeeper.session-timeout.ms": "9000",
                    "hadoop.proxyuser.hcat.groups": "*",
                    "hadoop.proxyuser.hcat.hosts": "*",
                    "hadoop.proxyuser.hive.groups": "*",
                    "hadoop.proxyuser.hive.hosts": "*",
                    "hadoop.proxyuser.httpfs.groups": "*",
                    "hadoop.proxyuser.httpfs.hosts": "*",
                    "hadoop.proxyuser.hue.groups": "*",
                    "hadoop.proxyuser.hue.hosts": "*",
                    "hadoop.security.auth_to_local": "DEFAULT",
                    "hadoop.security.authentication": "simple",
                    "hadoop.security.authorization": "false",
                    "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
                    "io.file.buffer.size": "131072",
                    "io.serializations": "org.apache.hadoop.io.serializer.WritableSerialization",
                    "ipc.client.connect.max.retries": "50",
                    "ipc.client.connection.maxidletime": "30000",
                    "ipc.client.idlethreshold": "8000",
                    "ipc.server.tcpnodelay": "true",
                    "mapreduce.jobtracker.webinterface.trusted": "false",
                    "net.topology.script.file.name": "/etc/hadoop/conf/topology_script.py"
                },
                "properties_attributes": {
                    "final": {
                        "fs.defaultFS": "true"
                    },
                    "fs.defaultFS": {
                        "final": "true"
                    }
                }
            }
        },
        {
            "hdfs-site": {
                "properties": {
                    "dfs.block.access.token.enable": "true",
                    "dfs.blockreport.initialDelay": "120",
                    "dfs.blocksize": "134217728",
                    "dfs.client.failover.proxy.provider.namenodeHA": "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider",
                    "dfs.client.read.shortcircuit": "true",
                    "dfs.client.read.shortcircuit.streams.cache.size": "4096",
                    "dfs.cluster.administrators": " hdfs",
                    "dfs.datanode.address": "0.0.0.0:50010",
                    "dfs.datanode.balance.bandwidthPerSec": "6250000",
                    "dfs.datanode.data.dir": "/hadoop/hdfs/data",
                    "dfs.datanode.data.dir.perm": "750",
                    "dfs.datanode.du.reserved": "1073741824",
                    "dfs.datanode.failed.volumes.tolerated": "0",
                    "dfs.datanode.http.address": "0.0.0.0:50075",
                    "dfs.datanode.https.address": "0.0.0.0:50475",
                    "dfs.datanode.ipc.address": "0.0.0.0:8010",
                    "dfs.datanode.max.transfer.threads": "1024",
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "dfs.ha.automatic-failover.enabled": "true",
                    "dfs.ha.fencing.methods": "shell(/bin/true)",
                    "dfs.ha.namenodes.namenodeHA": "nn1,nn2",
                    "dfs.heartbeat.interval": "3",
                    "dfs.hosts.exclude": "/etc/hadoop/conf/dfs.exclude",
                    "dfs.http.policy": "HTTP_ONLY",
                    "dfs.https.port": "50470",
                    "dfs.internal.nameservices": "namenodeHA",
                    "dfs.journalnode.edits.dir": "/hadoop/hdfs/journal",
                    "dfs.journalnode.http-address": "0.0.0.0:8480",
                    "dfs.journalnode.https-address": "0.0.0.0:8481",
                    "dfs.namenode.accesstime.precision": "0",
                    "dfs.namenode.avoid.read.stale.datanode": "true",
                    "dfs.namenode.avoid.write.stale.datanode": "true",
                    "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
                    "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
                    "dfs.namenode.checkpoint.period": "21600",
                    "dfs.namenode.checkpoint.txns": "1000000",
                    "dfs.namenode.handler.count": "100",
                    "dfs.namenode.http-address.namenodeHA.nn1": "%HOSTGROUP::host_group_0%:50070",
                    "dfs.namenode.http-address.namenodeHA.nn2": "%HOSTGROUP::host_group_1%:50070",
                    "dfs.namenode.https-address.namenodeHA.nn1": "%HOSTGROUP::host_group_0%:50470",
                    "dfs.namenode.https-address.namenodeHA.nn2": "%HOSTGROUP::host_group_1%:50470",
                    "dfs.namenode.name.dir": "/hadoop/hdfs/namenode",
                    "dfs.namenode.name.dir.restore": "true",
                    "dfs.namenode.rpc-address.namenodeHA.nn1": "%HOSTGROUP::host_group_0%:8020",
                    "dfs.namenode.rpc-address.namenodeHA.nn2": "%HOSTGROUP::host_group_1%:8020",
                    "dfs.namenode.safemode.threshold-pct": "0.99f",
                    "dfs.namenode.shared.edits.dir": "qjournal://%HOSTGROUP::host_group_0%:8485,%HOSTGROUP::host_group_1%:8485,%HOSTGROUP::host_group_2%:8485/namenodeHA",
                    "dfs.namenode.stale.datanode.interval": "30000",
                    "dfs.namenode.write.stale.datanode.ratio": "1.0f",
                    "dfs.nameservices": "namenodeHA",
                    "dfs.permissions.enabled": "true",
                    "dfs.permissions.superusergroup": "hdfs",
                    "dfs.replication": "3",
                    "dfs.replication.max": "50",
                    "dfs.support.append": "true",
                    "dfs.webhdfs.enabled": "true",
                    "fs.permissions.umask-mode": "022"
                },
                "properties_attributes": {
                    "dfs.datanode.data.dir": {
                        "final": "true"
                    },
                    "dfs.datanode.failed.volumes.tolerated": {
                        "final": "true"
                    },
                    "dfs.namenode.http-address": {
                        "final": "true"
                    },
                    "dfs.namenode.name.dir": {
                        "final": "true"
                    },
                    "dfs.support.append": {
                        "final": "true"
                    },
                    "dfs.webhdfs.enabled": {
                        "final": "true"
                    },
                    "final": {
                        "dfs.datanode.data.dir": "true",
                        "dfs.datanode.failed.volumes.tolerated": "true",
                        "dfs.namenode.http-address": "true",
                        "dfs.namenode.name.dir": "true",
                        "dfs.support.append": "true",
                        "dfs.webhdfs.enabled": "true"
                    }
                }
            }
        },
        {
            "ssl-client": {
                "properties": {
                    "ssl.client.keystore.location": "/etc/security/clientKeys/keystore.jks",
                    "ssl.client.keystore.type": "jks",
                    "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks",
                    "ssl.client.truststore.reload.interval": "10000",
                    "ssl.client.truststore.type": "jks"
                },
                "properties_attributes": {}
            }
        },
        {
            "hadoop-env": {
                "properties": {
                    "content": "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-/usr/lib/hadoop}\n\n# Hadoop Configuration Directory\n#TODO: if env var set that can cause problems\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n\n# Path to jsvc required by secure datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nif [[ (\"$SERVICE\" = \"hiveserver2\") || (\"$SERVICE\" = \"metastore\") || ( \"$SERVICE\" = \"cli\") ]]; then\n  if [ \"$HADOOP_HEAPSIZE\" = \"\" ]; then\n    export HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n  fi\nelse\n  export HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\nfi\n\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\n\n{% if java_version < 8 %}\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT -Dorg.mortbay.jetty.Request.maxFormContentSize=-1  ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly ${HADOOP_NAMENODE_INIT_HEAPSIZE} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n{% else %}\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly ${HADOOP_NAMENODE_INIT_HEAPSIZE} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n{% endif %}\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\nHADOOP_DATANODE_OPTS=\"-Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_DATANODE_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY -Drm.audit.logger=INFO,RMAUDIT\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Add database libraries\nJAVA_JDBC_LIBS=\"\"\nif [ -d \"/usr/share/java\" ]; then\n  for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n  do\n    JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n  done\nfi\n\n# Add libraries required by nodemanager\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\n\n# Add libraries to the hadoop classpath - some may not need a colon as they already include it\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:/usr/lib/tez/*:/usr/lib/tez/lib/*:/etc/tez/conf\nfi\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n#Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:/usr/lib/hadoop/lib/native/Linux-amd64-64:/opt/hadoop-2.7.0/lib/native\n\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}",
                    "dtnode_heapsize": "1024m",
                    "hadoop_heapsize": "1024",
                    "hadoop_pid_dir_prefix": "/var/run/hadoop",
                    "hadoop_root_logger": "INFO,RFA",
                    "hdfs_log_dir_prefix": "/var/log/hadoop",
                    "hdfs_tmp_dir": "/tmp",
                    "hdfs_user": "hdfs",
                    "hdfs_user_nofile_limit": "128000",
                    "hdfs_user_nproc_limit": "65536",
                    "namenode_heapsize": "1024m",
                    "namenode_opt_maxnewsize": "200m",
                    "namenode_opt_maxpermsize": "256m",
                    "namenode_opt_newsize": "200m",
                    "namenode_opt_permsize": "128m",
                    "proxyuser_group": "users"
                },
                "properties_attributes": {}
            }
        },
        {
            "webhcat-log4j": {
                "properties": {
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Define some default values that can be overridden by system properties\nwebhcat.root.logger = INFO, standard\nwebhcat.log.dir = .\nwebhcat.log.file = webhcat.log\n\nlog4j.rootLogger = ${webhcat.root.logger}\n\n# Logging Threshold\nlog4j.threshhold = DEBUG\n\nlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern = .yyyy-MM-dd\n\nlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayout\n\nlog4j.appender.standard.layout = org.apache.log4j.PatternLayout\nlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n\n\n# Class logging settings\nlog4j.logger.com.sun.jersey = DEBUG\nlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERROR\nlog4j.logger.org.apache.hadoop = INFO\nlog4j.logger.org.apache.hadoop.conf = WARN\nlog4j.logger.org.apache.zookeeper = WARN\nlog4j.logger.org.eclipse.jetty = INFO"
                },
                "properties_attributes": {}
            }
        },
        {
            "hcat-env": {
                "properties": {
                    "content": "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}"
                },
                "properties_attributes": {}
            }
        },
        {
            "hive-site": {
                "properties": {
                    "ambari.hive.db.schema.name": "db1",
                    "atlas.cluster.name": "{{cluster_name}}",
                    "datanucleus.autoCreateSchema": "false",
                    "fs.file.impl.disable.cache": "true",
                    "fs.hdfs.impl.disable.cache": "true",
                    "hive.auto.convert.join": "true",
                    "hive.auto.convert.join.noconditionaltask": "true",
                    "hive.auto.convert.join.noconditionaltask.size": "2147483648",
                    "hive.auto.convert.sortmerge.join": "true",
                    "hive.auto.convert.sortmerge.join.noconditionaltask": "true",
                    "hive.default.fileformat": "TextFile",
                    "hive.enforce.bucketing": "true",
                    "hive.enforce.sorting": "true",
                    "hive.heapsize": "1024",
                    "hive.map.aggr": "true",
                    "hive.mapjoin.bucket.cache.size": "10000",
                    "hive.mapred.reduce.tasks.speculative.execution": "false",
                    "hive.metastore.cache.pinobjtypes": "Table,Database,Type,FieldSchema,Order",
                    "hive.metastore.client.socket.timeout": "60",
                    "hive.metastore.execute.setugi": "true",
                    "hive.metastore.pre.event.listeners": "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
                    "hive.metastore.sasl.enabled": "false",
                    "hive.metastore.uris": "thrift://%HOSTGROUP::host_group_0%:9083,thrift://%HOSTGROUP::host_group_1%:9083",
                    "hive.metastore.warehouse.dir": "/apps/hive/warehouse",
                    "hive.optimize.bucketmapjoin": "true",
                    "hive.optimize.bucketmapjoin.sortedmerge": "false",
                    "hive.optimize.index.filter": "true",
                    "hive.optimize.mapjoin.mapreduce": "true",
                    "hive.optimize.reducededuplication": "true",
                    "hive.optimize.reducededuplication.min.reducer": "1",
                    "hive.security.authenticator.manager": "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
                    "hive.security.authorization.enabled": "false",
                    "hive.security.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
                    "hive.security.metastore.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
                    "hive.server2.authentication": "NONE",
                    "hive.server2.enable.doAs": "true",
                    "hive.server2.enable.impersonation": "true",
                    "hive.server2.max.start.attempts": "5",
                    "hive.server2.support.dynamic.service.discovery": "true",
                    "hive.server2.thrift.port": "10000",
                    "hive.server2.transport.mode": "binary",
                    "hive.server2.zookeeper.namespace": "hiveserver2",
                    "hive.vectorized.execution.enabled": "true",
                    "hive.zookeeper.client.port": "2181",
                    "hive.zookeeper.quorum": "%HOSTGROUP::host_group_0%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_2%:2181",
                    "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
                    "javax.jdo.option.ConnectionPassword": "hive",
                    "javax.jdo.option.ConnectionURL": "jdbc:mysql://10.194.11.71/db1?createDatabaseIfNotExist=true",
                    "javax.jdo.option.ConnectionUserName": "hive"
                },
                "properties_attributes": {
                    "hidden": {
                        "javax.jdo.option.ConnectionPassword": "root123"
                    }
                }
            }
        },
        {
            "webhcat-site": {
                "properties": {
                    "templeton.exec.timeout": "60000",
                    "templeton.hadoop": "/usr/bin/hadoop",
                    "templeton.hadoop.conf.dir": "/etc/hadoop/conf",
                    "templeton.hadoop.queue.name": "default",
                    "templeton.hcat": "/usr/bin/hcat",
                    "templeton.hcat.home": "hive.tar.gz/hive/hcatalog",
                    "templeton.hive.archive": "hdfs:///apps/webhcat/hive.tar.gz",
                    "templeton.hive.home": "hive.tar.gz/hive",
                    "templeton.hive.path": "hive.tar.gz/hive/bin/hive",
                    "templeton.hive.properties": "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_0%:9083,hive.metastore.sasl.enabled=false,hive.metastore.execute.setugi=true",
                    "templeton.jar": "/usr/lib/hcatalog/share/webhcat/svr/webhcat.jar",
                    "templeton.libjars": "/usr/lib/zookeeper/zookeeper.jar",
                    "templeton.override.enabled": "false",
                    "templeton.pig.archive": "hdfs:///apps/webhcat/pig.tar.gz",
                    "templeton.pig.path": "pig.tar.gz/pig/bin/pig",
                    "templeton.port": "50111",
                    "templeton.python": "${env.PYTHON_CMD}",
                    "templeton.storage.class": "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
                    "templeton.streaming.jar": "hdfs:///apps/webhcat/hadoop-streaming.jar",
                    "templeton.zookeeper.hosts": "%HOSTGROUP::host_group_0%:2181"
                },
                "properties_attributes": {}
            }
        },
        {
            "hive-exec-log4j": {
                "properties": {
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
                },
                "properties_attributes": {}
            }
        },
        {
            "webhcat-env": {
                "properties": {
                    "content": "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}"
                },
                "properties_attributes": {}
            }
        },
        {
            "hive-log4j": {
                "properties": {
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
                },
                "properties_attributes": {}
            }
        },
        {
            "hive-env": {
                "properties": {
                    "content": "\n if [ \"$SERVICE\" = \"cli\" ]; then\n   if [ -z \"$DEBUG\" ]; then\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n   else\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n   fi\n fi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\nif [ \"$SERVICE\" = \"metastore\" ]; then\n  export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\nelse\n  export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\nfi\n\nexport HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR={{hive_config_dir}}\n\n# Folder containing extra ibraries required for hive compilation/execution can be controlled by:\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\nelif [ -d \"/usr/lib/hive-hcatalog/\" ]; then\n  export HIVE_AUX_JARS_PATH=/usr/lib/hive-hcatalog/share/hcatalog/hive-hcatalog-core-*.jar\nelse\n  export HIVE_AUX_JARS_PATH=/usr/lib/hcatalog/share/hcatalog/hcatalog-core.jar\nfi\nexport METASTORE_PORT={{hive_metastore_port}}",
                    "hcat_log_dir": "/var/log/webhcat",
                    "hcat_pid_dir": "/var/run/webhcat",
                    "hcat_user": "hcat",
                    "hive.client.heapsize": "512",
                    "hive.metastore.heapsize": "1024",
                    "hive_ambari_database": "MySQL",
                    "hive_database": "Existing MySQL / MariaDB Database",
                    "hive_database_name": "db1",
                    "hive_database_type": "mysql",
                    "hive_log_dir": "/var/log/hive",
                    "hive_pid_dir": "/var/run/hive",
                    "hive_user": "hive",
                    "hive_user_nofile_limit": "32000",
                    "hive_user_nproc_limit": "16000",
                    "webhcat_user": "hcat"
                },
                "properties_attributes": {}
            }
        },
        {
            "capacity-scheduler": {
                "properties": {
                    "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
                    "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
                    "yarn.scheduler.capacity.maximum-applications": "10000",
                    "yarn.scheduler.capacity.node-locality-delay": "40",
                    "yarn.scheduler.capacity.root.acl_administer_queue": "*",
                    "yarn.scheduler.capacity.root.capacity": "100",
                    "yarn.scheduler.capacity.root.default.acl_administer_jobs": "*",
                    "yarn.scheduler.capacity.root.default.acl_submit_applications": "*",
                    "yarn.scheduler.capacity.root.default.capacity": "100",
                    "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
                    "yarn.scheduler.capacity.root.default.state": "RUNNING",
                    "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
                    "yarn.scheduler.capacity.root.queues": "default"
                },
                "properties_attributes": {}
            }
        },
        {
            "mapred-site": {
                "properties": {
                    "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhadoop.metrics.log.level=WARN",
                    "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhadoop.metrics.log.level=WARN",
                    "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/usr/lib/hadoop/lib/native:/usr/lib/hadoop/lib/native/Linux-amd64-64",
                    "mapreduce.am.max-attempts": "2",
                    "mapreduce.application.classpath": "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*",
                    "mapreduce.cluster.administrators": " hadoop",
                    "mapreduce.framework.name": "yarn",
                    "mapreduce.job.counters.max": "130",
                    "mapreduce.job.queuename": "default",
                    "mapreduce.job.reduce.slowstart.completedmaps": "0.05",
                    "mapreduce.jobhistory.address": "%HOSTGROUP::host_group_0%:10020",
                    "mapreduce.jobhistory.done-dir": "/mr-history/done",
                    "mapreduce.jobhistory.http.policy": "HTTP_ONLY",
                    "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
                    "mapreduce.jobhistory.webapp.address": "%HOSTGROUP::host_group_0%:19888",
                    "mapreduce.map.java.opts": "-Xmx410m",
                    "mapreduce.map.log.level": "INFO",
                    "mapreduce.map.memory.mb": "512",
                    "mapreduce.map.output.compress": "false",
                    "mapreduce.map.sort.spill.percent": "0.7",
                    "mapreduce.map.speculative": "false",
                    "mapreduce.output.fileoutputformat.compress": "false",
                    "mapreduce.output.fileoutputformat.compress.type": "BLOCK",
                    "mapreduce.reduce.input.buffer.percent": "0.0",
                    "mapreduce.reduce.java.opts": "-Xmx756m",
                    "mapreduce.reduce.log.level": "INFO",
                    "mapreduce.reduce.memory.mb": "1024",
                    "mapreduce.reduce.shuffle.input.buffer.percent": "0.7",
                    "mapreduce.reduce.shuffle.merge.percent": "0.66",
                    "mapreduce.reduce.shuffle.parallelcopies": "30",
                    "mapreduce.reduce.speculative": "false",
                    "mapreduce.shuffle.port": "13562",
                    "mapreduce.task.io.sort.factor": "100",
                    "mapreduce.task.io.sort.mb": "358",
                    "mapreduce.task.timeout": "300000",
                    "yarn.app.mapreduce.am.admin-command-opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhadoop.metrics.log.level=WARN",
                    "yarn.app.mapreduce.am.command-opts": "-Xmx410m",
                    "yarn.app.mapreduce.am.log.level": "INFO",
                    "yarn.app.mapreduce.am.resource.mb": "512",
                    "yarn.app.mapreduce.am.staging-dir": "/user"
                },
                "properties_attributes": {}
            }
        },
        {
            "yarn-site": {
                "properties": {
                    "yarn.acl.enable": "false",
                    "yarn.admin.acl": "",
                    "yarn.application.classpath": "/etc/hadoop/conf,/usr/lib/hadoop/*,/usr/lib/hadoop/lib/*,/usr/lib/hadoop-hdfs/*,/usr/lib/hadoop-hdfs/lib/*,/usr/lib/hadoop-yarn/*,/usr/lib/hadoop-yarn/lib/*,/usr/lib/hadoop-mapreduce/*,/usr/lib/hadoop-mapreduce/lib/*,/opt/hadoop-2.7.0/share/hadoop/common/lib/*,/opt/hadoop-2.7.0/share/hadoop/common/*,/opt/hadoop-2.7.0/share/hadoop/hdfs/lib/*,/opt/hadoop-2.7.0/share/hadoop/hdfs/*,/opt/hadoop-2.7.0/share/hadoop/httpfs/tomcat/lib/*,/opt/hadoop-2.7.0/share/hadoop/kms/tomcat/lib/*,/opt/hadoop-2.7.0/share/hadoop/mapreduce/lib/*,/opt/hadoop-2.7.0/share/hadoop/mapreduce/*,/opt/hadoop-2.7.0/share/hadoop/tools/lib/*,/opt/hadoop-2.7.0/share/hadoop/yarn/lib/*,/opt/hadoop-2.7.0/share/hadoop/yarn/*",
                    "yarn.http.policy": "HTTP_ONLY",
                    "yarn.log-aggregation-enable": "true",
                    "yarn.log-aggregation.retain-seconds": "2592000",
                    "yarn.log.server.url": "http://%HOSTGROUP::host_group_0%:19888/jobhistory/logs",
                    "yarn.nodemanager.address": "0.0.0.0:45454",
                    "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
                    "yarn.nodemanager.aux-services": "mapreduce_shuffle,spark_shuffle",
                    "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
                    "yarn.nodemanager.aux-services.spark2_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.nodemanager.aux-services.spark2_shuffle.classpath": "/opt/spark-2.0.2-bin-hadoop2.7/yarn/*",
                    "yarn.nodemanager.aux-services.spark_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.nodemanager.aux-services.spark_shuffle.classpath": "/opt/spark-2.0.2-bin-hadoop2.7/yarn/*",
                    "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
                    "yarn.nodemanager.container-monitor.interval-ms": "3000",
                    "yarn.nodemanager.delete.debug-delay-sec": "0",
                    "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
                    "yarn.nodemanager.health-checker.interval-ms": "135000",
                    "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
                    "yarn.nodemanager.linux-container-executor.group": "hadoop",
                    "yarn.nodemanager.local-dirs": "/Data0/dfs/yarn/nm",
                    "yarn.nodemanager.log-aggregation.compression-type": "gz",
                    "yarn.nodemanager.log-dirs": "/hadoop/yarn/log",
                    "yarn.nodemanager.log.retain-second": "604800",
                    "yarn.nodemanager.remote-app-log-dir": "/app-logs",
                    "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
                    "yarn.nodemanager.resource.memory-mb": "5120",
                    "yarn.nodemanager.vmem-check-enabled": "false",
                    "yarn.nodemanager.vmem-pmem-ratio": "2.1",
                    "yarn.resourcemanager.address": "%HOSTGROUP::host_group_0%:8050",
                    "yarn.resourcemanager.admin.address": "%HOSTGROUP::host_group_0%:8141",
                    "yarn.resourcemanager.am.max-attempts": "2",
                    "yarn.resourcemanager.cluster-id": "yarn-cluster",
                    "yarn.resourcemanager.ha.automatic-failover.zk-base-path": "/yarn-leader-election",
                    "yarn.resourcemanager.ha.enabled": "true",
                    "yarn.resourcemanager.ha.rm-ids": "rm1,rm2",
                    "yarn.resourcemanager.hostname": "%HOSTGROUP::host_group_0%",
                    "yarn.resourcemanager.hostname.rm1": "%HOSTGROUP::host_group_0%",
                    "yarn.resourcemanager.hostname.rm2": "%HOSTGROUP::host_group_1%",
                    "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
                    "yarn.resourcemanager.recovery.enabled": "true",
                    "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::host_group_0%:8025",
                    "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::host_group_0%:8030",
                    "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
                    "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
                    "yarn.resourcemanager.webapp.address": "%HOSTGROUP::host_group_0%:8088",
                    "yarn.resourcemanager.webapp.address.rm1": "%HOSTGROUP::host_group_0%:8088",
                    "yarn.resourcemanager.webapp.address.rm2": "%HOSTGROUP::host_group_1%:8088",
                    "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::host_group_0%:8090",
                    "yarn.resourcemanager.webapp.https.address.rm1": "%HOSTGROUP::host_group_0%:8090",
                    "yarn.resourcemanager.webapp.https.address.rm2": "%HOSTGROUP::host_group_1%:8090",
                    "yarn.resourcemanager.zk-address": "%HOSTGROUP::host_group_0%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_2%:2181",
                    "yarn.scheduler.maximum-allocation-mb": "5120",
                    "yarn.scheduler.minimum-allocation-mb": "512"
                },
                "properties_attributes": {}
            }
        },
        {
            "yarn-env": {
                "properties": {
                    "content": "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# resolve links - $0 may be a softlink\nexport YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n  #echo \"run java in $JAVA_HOME\"\n  JAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\n  echo \"Error: JAVA_HOME is not set.\"\n  exit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n  JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_RESOURCEMANAGER_OPTS=\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the HistoryManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_HISTORYSERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_NODEMANAGER_OPTS=\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$YARN_LOG_DIR\" = \"\" ]; then\n  YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$YARN_LOGFILE\" = \"\" ]; then\n  YARN_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\n  YARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nexport YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\nexport YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Drm.audit.logger=INFO,RMAUDIT\"\nif [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n  YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\nfi\nYARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\nYARN_OPTS=\"$YARN_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"",
                    "is_supported_yarn_ranger": "false",
                    "min_user_id": "1000",
                    "nodemanager_heapsize": "1024",
                    "resourcemanager_heapsize": "1024",
                    "service_check.queue.name": "default",
                    "yarn_heapsize": "1024",
                    "yarn_log_dir_prefix": "/var/log/hadoop-yarn",
                    "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
                    "yarn_user": "yarn",
                    "yarn_user_nofile_limit": "32768",
                    "yarn_user_nproc_limit": "65536"
                },
                "properties_attributes": {}
            }
        },
        {
            "yarn-log4j": {
                "properties": {
                    "content": "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
                },
                "properties_attributes": {}
            }
        },
        {
            "mapred-env": {
                "properties": {
                    "content": "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.",
                    "jobhistory_heapsize": "900",
                    "mapred_log_dir_prefix": "/var/log/hadoop-mapreduce",
                    "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
                    "mapred_user": "mapred",
                    "mapred_user_nofile_limit": "32768",
                    "mapred_user_nproc_limit": "65536"
                },
                "properties_attributes": {}
            }
        },
        {
            "hbase-policy": {
                "properties": {
                    "security.admin.protocol.acl": "*",
                    "security.client.protocol.acl": "*",
                    "security.masterregion.protocol.acl": "*"
                },
                "properties_attributes": {}
            }
        },
        {
            "hbase-env": {
                "properties": {
                    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if java_version < 8 %}\nJDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n{% endif %}\n      \n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}} -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport PHOENIX_QUERYSERVER_OPTS=\"$PHOENIX_QUERYSERVER_OPTS -Djava.security.auth.login.config={{queryserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n{% endif %}\n\n# HBase off-heap MaxDirectMemorySize\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"",
                    "hbase_java_io_tmpdir": "/tmp",
                    "hbase_log_dir": "/var/log/hbase",
                    "hbase_master_heapsize": "1024",
                    "hbase_pid_dir": "/var/run/hbase",
                    "hbase_regionserver_heapsize": "2048",
                    "hbase_regionserver_shutdown_timeout": "30",
                    "hbase_regionserver_xmn_max": "512",
                    "hbase_regionserver_xmn_ratio": "0.2",
                    "hbase_user": "hbase",
                    "hbase_user_nofile_limit": "32000",
                    "hbase_user_nproc_limit": "16000",
                    "phoenix_sql_enabled": "false"
                },
                "properties_attributes": {}
            }
        },
        {
            "hbase-log4j": {
                "properties": {
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
                },
                "properties_attributes": {}
            }
        },
        {
            "hbase-site": {
                "properties": {
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "hbase.bulkload.staging.dir": "/apps/hbase/staging",
                    "hbase.client.keyvalue.maxsize": "1048576",
                    "hbase.client.retries.number": "35",
                    "hbase.client.scanner.caching": "100",
                    "hbase.cluster.distributed": "true",
                    "hbase.coprocessor.master.classes": "",
                    "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint",
                    "hbase.defaults.for.version.skip": "true",
                    "hbase.hregion.majorcompaction": "604800000",
                    "hbase.hregion.majorcompaction.jitter": "0.50",
                    "hbase.hregion.max.filesize": "10737418240",
                    "hbase.hregion.memstore.block.multiplier": "4",
                    "hbase.hregion.memstore.flush.size": "134217728",
                    "hbase.hregion.memstore.mslab.enabled": "true",
                    "hbase.hstore.blockingStoreFiles": "10",
                    "hbase.hstore.compaction.max": "10",
                    "hbase.hstore.compactionThreshold": "3",
                    "hbase.local.dir": "${hbase.tmp.dir}/local",
                    "hbase.master.info.bindAddress": "0.0.0.0",
                    "hbase.master.info.port": "16010",
                    "hbase.master.port": "16000",
                    "hbase.master.ui.readonly": "false",
                    "hbase.regionserver.global.memstore.size": "0.4",
                    "hbase.regionserver.handler.count": "30",
                    "hbase.regionserver.info.port": "16030",
                    "hbase.regionserver.port": "16020",
                    "hbase.regionserver.wal.codec": "org.apache.hadoop.hbase.regionserver.wal.WALCellCodec",
                    "hbase.rootdir": "hdfs://namenodeHA:8020/apps/hbase/data",
                    "hbase.rpc.protection": "authentication",
                    "hbase.rpc.timeout": "90000",
                    "hbase.security.authentication": "simple",
                    "hbase.security.authorization": "false",
                    "hbase.superuser": "hbase",
                    "hbase.tmp.dir": "/tmp/hbase-${user.name}",
                    "hbase.zookeeper.property.clientPort": "2181",
                    "hbase.zookeeper.quorum": "%HOSTGROUP::host_group_0%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_2%:2181",
                    "hbase.zookeeper.useMulti": "true",
                    "hfile.block.cache.size": "0.4",
                    "phoenix.query.timeoutMs": "60000",
                    "zookeeper.recovery.retry": "6",
                    "zookeeper.session.timeout": "90000",
                    "zookeeper.znode.parent": "/hbase"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-defaults": {
                "properties": {
                    "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
                    "spark.eventLog.dir": "hdfs:///spark2-history/",
                    "spark.eventLog.enabled": "true",
                    "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
                    "spark.history.fs.logDirectory": "hdfs:///spark2-history/",
                    "spark.history.kerberos.keytab": "none",
                    "spark.history.kerberos.principal": "none",
                    "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
                    "spark.history.ui.port": "18081",
                    "spark.yarn.historyServer.address": "{{spark_history_server_host}}:{{spark_history_ui_port}}",
                    "spark.yarn.queue": "default"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-env": {
                "properties": {
                    "content": "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512M\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"default\" #The hadoop queue to use for allocation requests (Default: default)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n#Memory for Master, Worker and history server (default: 1024MB)\nexport SPARK_DAEMON_MEMORY={{spark_daemon_memory}}m\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}",
                    "hive_kerberos_keytab": "{{hive_kerberos_keytab}}",
                    "hive_kerberos_principal": "{{hive_kerberos_principal}}",
                    "spark_daemon_memory": "1024",
                    "spark_group": "spark",
                    "spark_log_dir": "/var/log/spark2",
                    "spark_pid_dir": "/var/run/spark2",
                    "spark_thrift_cmd_opts": "",
                    "spark_user": "spark"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-hive-site-override": {
                "properties": {
                    "hive.metastore.client.connect.retry.delay": "5",
                    "hive.metastore.client.socket.timeout": "1800",
                    "hive.server2.enable.doAs": "false",
                    "hive.server2.support.dynamic.service.discovery": "true",
                    "hive.server2.thrift.port": "10016",
                    "hive.server2.transport.mode": "binary",
                    "hive.server2.zookeeper.namespace": "sparkhiveserver2",
                    "hive.zookeeper.quorum": "host-10-197-53-90.nokia.com:2181,host-10-197-53-91.nokia.com:2181,host-10-197-53-92.nokia.com:2181"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-log4j-properties": {
                "properties": {
                    "content": "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-metrics-properties": {
                "properties": {
                    "content": "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-thrift-fairscheduler": {
                "properties": {
                    "fairscheduler_content": "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
                },
                "properties_attributes": {}
            }
        },
        {
            "spark2-thrift-sparkconf": {
                "properties": {
                    "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
                    "spark.dynamicAllocation.enabled": "true",
                    "spark.dynamicAllocation.initialExecutors": "0",
                    "spark.dynamicAllocation.maxExecutors": "10",
                    "spark.dynamicAllocation.minExecutors": "0",
                    "spark.eventLog.dir": "{{spark_history_dir}}",
                    "spark.eventLog.enabled": "true",
                    "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
                    "spark.hadoop.cacheConf": "false",
                    "spark.history.fs.logDirectory": "{{spark_history_dir}}",
                    "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
                    "spark.master": "{{spark_thrift_master}}",
                    "spark.scheduler.allocation.file": "{{spark_conf}}/spark-thrift-fairscheduler.xml",
                    "spark.scheduler.mode": "FAIR",
                    "spark.shuffle.service.enabled": "true",
                    "spark.shuffle.service.port": "7337",
                    "spark.yarn.queue": "default"
                },
                "properties_attributes": {
                    "final": {
                        "spark.eventLog.dir": "true",
                        "spark.eventLog.enabled": "true",
                        "spark.history.fs.logDirectory": "true"
                    }
                }
            }
        },
        {
            "tez-env": {
                "properties": {
                    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}",
                    "tez_user": "tez"
                },
                "properties_attributes": {}
            }
        },
        {
            "tez-site": {
                "properties": {
                    "hdp.version": "2.7.0",
                    "tez.am.am-rm.heartbeat.interval-ms.max": "250",
                    "tez.am.container.idle.release-timeout-max.millis": "20000",
                    "tez.am.container.idle.release-timeout-min.millis": "10000",
                    "tez.am.container.reuse.enabled": "true",
                    "tez.am.container.reuse.locality.delay-allocation-millis": "250",
                    "tez.am.container.reuse.non-local-fallback.enabled": "false",
                    "tez.am.container.reuse.rack-fallback.enabled": "true",
                    "tez.am.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=2.7.0",
                    "tez.am.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
                    "tez.am.launch.env": "LD_LIBRARY_PATH=/opt/hadoop-2.7.0/lib/native",
                    "tez.am.log.level": "INFO",
                    "tez.am.max.app.attempts": "2",
                    "tez.am.maxtaskfailures.per.node": "10",
                    "tez.am.resource.memory.mb": "2048",
                    "tez.am.tez-ui.history-url.template": "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
                    "tez.am.view-acls": "*",
                    "tez.counters.max": "10000",
                    "tez.counters.max.groups": "3000",
                    "tez.generate.debug.artifacts": "false",
                    "tez.grouping.max-size": "1073741824",
                    "tez.grouping.min-size": "16777216",
                    "tez.grouping.split-waves": "1.7",
                    "tez.history.logging.service.class": "org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService",
                    "tez.lib.uris": "${fs.defaultFS}/apps/tez/tez.tar.gz#tez",
                    "tez.lib.uris.classpath": "tez/*:tez/lib/*",
                    "tez.queue.name": "default",
                    "tez.runtime.compress": "true",
                    "tez.runtime.compress.codec": "org.apache.hadoop.io.compress.SnappyCodec",
                    "tez.runtime.convert.user-payload.to.history-text": "false",
                    "tez.runtime.io.sort.mb": "270",
                    "tez.runtime.optimize.local.fetch": "true",
                    "tez.runtime.pipelined.sorter.sort.threads": "2",
                    "tez.runtime.shuffle.fetch.buffer.percent": "0.6",
                    "tez.runtime.shuffle.memory.limit.percent": "0.25",
                    "tez.runtime.sorter.class": "PIPELINED",
                    "tez.runtime.unordered.output.buffer.size-mb": "76",
                    "tez.session.am.dag.submit.timeout.secs": "600",
                    "tez.session.client.timeout.secs": "-1",
                    "tez.shuffle-vertex-manager.max-src-fraction": "0.4",
                    "tez.shuffle-vertex-manager.min-src-fraction": "0.2",
                    "tez.staging-dir": "/tmp/${user.name}/staging",
                    "tez.task.am.heartbeat.counter.interval-ms.max": "4000",
                    "tez.task.generate.counters.per.io": "true",
                    "tez.task.get-task.sleep.interval-ms.max": "200",
                    "tez.task.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
                    "tez.task.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
                    "tez.task.launch.env": "LD_LIBRARY_PATH=/opt/hadoop-2.7.0/lib/native",
                    "tez.task.max-events-per-heartbeat": "500",
                    "tez.task.resource.memory.mb": "1024",
                    "tez.use.cluster.hadoop-libs": "false"
                },
                "properties_attributes": {}
            }
        }
    ],
    "host_groups": [
        {
            "cardinality": "1",
            "components": [
                {
                    "name": "HIVE_METASTORE"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "RESOURCEMANAGER"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "SPARK2_CLIENT"
                },
                {
                    "name": "HIVE_CLIENT"
                },
                {
                    "name": "HISTORYSERVER"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "HBASE_CLIENT"
                },
                {
                    "name": "SPARK2_THRIFTSERVER"
                },
                {
                    "name": "HBASE_MASTER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "TEZ_CLIENT"
                },
                {
                    "name": "SPARK2_JOBHISTORYSERVER"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "NAMENODE"
                },
                {
                    "name": "NODEMANAGER"
                },
                {
                    "name": "HIVE_SERVER"
                },
                {
                    "name": "ZKFC"
                },
                {
                    "name": "HBASE_REGIONSERVER"
                }
            ],
            "configurations": [],
            "name": "host_group_0"
        },
        {
            "cardinality": "1",
            "components": [
                {
                    "name": "HIVE_METASTORE"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "RESOURCEMANAGER"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "SPARK2_CLIENT"
                },
                {
                    "name": "HIVE_CLIENT"
                },
                {
                    "name": "HISTORYSERVER"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "HBASE_CLIENT"
                },
                {
                    "name": "SPARK2_THRIFTSERVER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "TEZ_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "NAMENODE"
                },
                {
                    "name": "NODEMANAGER"
                },
                {
                    "name": "HIVE_SERVER"
                },
                {
                    "name": "ZKFC"
                },
                {
                    "name": "SPARK2_JOBHISTORYSERVER"
                }
            ],
            "configurations": [],
            "name": "host_group_1"
        },
        {
            "cardinality": "1",
            "components": [
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "TEZ_CLIENT"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "HBASE_MASTER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "HBASE_CLIENT"
                }
            ],
            "configurations": [],
            "name": "host_group_2"
        }
    ]
}